# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxPathSum(self, root: Optional[TreeNode]) -> int:
        max_val = [float('-inf')]
        self.maxNodeToAny(root,max_val)
        return max_val[0]
        
        
    def maxNodeToAny(self,node,max_val):
        if not node:
            return 0 
        left = self.maxNodeToAny(node.left,max_val)
        right = self.maxNodeToAny(node.right,max_val)
        max_val[0] = max(max_val[0],max(left,0)+max(right,0)+node.val)
        return node.val+max(0,max(left,right))
