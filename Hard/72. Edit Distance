class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        m, n = len(word1), len(word2)
        dp = [[0 for j in range(n+1)] for i in range(m+1)]
        
        for i in range(m+1):
            for j in range(n+1):
                if i == 0:
                    dp[i][j] = j 
                elif j == 0:
                    dp[i][j] = i
                #same chars, contribution 0 
                elif word1[i-1] == word2[j-1]:
                    dp[i][j] = dp[i-1][j-1]
                
                else:
                    #three choices, contribution is 1 for each
                    replace = dp[i-1][j-1] + 1
                    add = dp[i][j-1] + 1
                    delete = dp[i-1][j] + 1
                    dp[i][j] = min(replace,add,delete)
        return dp[-1][-1]
    
    #TC: O(n*m) || SC: O(n*m)
