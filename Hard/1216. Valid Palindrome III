class Solution:
    def isValidPalindrome(self, s: str, k: int) -> bool:
        #find longest palindrome subsequence
        n = len(s)
        dp = [[0 for c in range(n)]for r in range(n)]
        for r in range(n-1,-1,-1):
            for c in range(r,n):
                if r == c:
                    dp[r][c] = 1
                elif r == c+1:
                    if s[r] == s[c]:
                        dp[r][c] = 2
                else:
                    if s[r] == s[c]:
                        dp[r][c] = dp[r+1][c-1] + 2
                    else:
                        dp[r][c] = max(dp[r+1][c],dp[r][c-1])
        
        longest_subsequence = dp[0][-1]
        return n - longest_subsequence <= k