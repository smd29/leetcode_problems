class Solution:
    def countVowelPermutation(self, n: int) -> int:
        mod = (10 ** 9) + 7 
        
        dp = [[0 for c in range(5)] for r in range(n+1)]
        #dp[i][j] -> number of strings of len = i that ends with j-th vowel 
        #0th vowel: a || 1st: e || 2nd: i || 3rd: o || 4th : u 
        
        ends_with = {0: [1,2,4],
                     1: [0,2],
                     2: [1,3],
                     3: [2],
                     4: [2,3]}
        
        #0th char is a(idx = 0), a can be the last char if prev chars are e(idx = 1), i(idx=2) or u(idx=3)
        #... similar for other chars 
        
        for r in range(n+1):
            for c in range(5):
                if r == 0 or r == 1:
                    dp[r][c] = r
                else:
                    for idx in ends_with[c]:
                        dp[r][c] += dp[r-1][idx]
        
        return sum(dp[-1]) % mod
