class Solution:
    def candy(self, ratings: List[int]) -> int:
        n = len(ratings)
        candy_left, candy_right = [1] * n, [1] * n
        #assign candies based on left neighbors
        for idx in range(1,n):
            if ratings[idx] > ratings[idx-1]:
                candy_left[idx] = candy_left[idx-1] + 1
            else:
                candy_left[idx] = 1
        #assign candies based on right neighbors
        for idx in range(n-2,-1,-1):
            if ratings[idx] > ratings[idx+1]:
                candy_right[idx] = candy_right[idx+1] + 1
            else:
                candy_right[idx] = 1
        
        total_candies = 0
        #find max of both the arrays and assign those many candies to the concerned candidate
        for val1,val2 in zip(candy_left,candy_right):
            total_candies += max(val1,val2)
        return total_candies
