class Solution:
    def minFallingPathSum(self, grid: List[List[int]]) -> int:
        n= len(grid)
        dp = [[0 for c in range(n)]for r in range(n)]
        for c in range(n):
            dp[0][c] = grid[0][c]
        
        for r in range(1,n):
            for c in range(n):
                #find the minimum in the previous row, except that particular column
                if c == 0:
                    dp[r][c] = grid[r][c] + min(dp[r-1][1:])
                elif c == n - 1:
                    dp[r][c] = grid[r][c] + min(dp[r-1][:n-1])
                else:
                    min_left = min(dp[r-1][:c])
                    min_right = min(dp[r-1][c+1:])
                    dp[r][c] = grid[r][c] + min(min_left,min_right)
        return min(dp[-1])
