# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def averageOfLevels(self, root: Optional[TreeNode]) -> List[float]:
        res = []
        queue = collections.deque()
        queue.append(root)
        
        while queue:
            no_nodes = 0
            sum = 0 
            for i in range(len(queue)):
                node = queue.popleft()
                if node:
                    sum += node.val 
                    no_nodes += 1
                    queue.append(node.left)
                    queue.append(node.right)
            
            if sum or (sum == 0 and no_nodes > 0):
                res.append(sum / no_nodes)
        return res
