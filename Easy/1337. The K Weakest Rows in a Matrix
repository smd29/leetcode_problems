from heapq import heapify, heappop
class Solution:
    def kWeakestRows(self, mat: List[List[int]], k: int) -> List[int]:
        rows = len(mat)
        #for each row check how many soldiers are there and store in a list
        soldiers = [0] * rows
        for idx in range(rows):
            sols = self.numSoldiers(mat[idx])
            soldiers[idx] = (sols,idx)
        heapify(soldiers)
        res = []
        while k > 0:
            sols, idx = heappop(soldiers)
            res.append(idx)
            k -= 1
        return res
        
    def numSoldiers(self,arr):
        low, high = 0, len(arr) - 1
        while low <= high:
            mid = (low + high) // 2
            if arr[mid] == 1:
                low = mid + 1
            else:
                high = mid - 1
        return low
