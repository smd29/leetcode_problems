class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        rows, cols = len(grid), len(grid[0])
        fresh = 0
        visited = set()
        queue = collections.deque()
        for r in range(rows):
            for c in range(cols):
                if grid[r][c] == 2:
                    visited.add((r,c))
                    queue.append([r,c,0])
                if grid[r][c] == 1:
                    fresh += 1
                    
        if fresh == 0:
            return 0
        while queue:
            row,col,time = queue.popleft()
            directions = [(0,1),(0,-1),(1,0),(-1,0)]
            for dr,dc in directions:
                r,c = row+dr, col+dc
                if (r in range(rows) and c in range(cols) and grid[r][c] == 1 and (r,c) not in visited):
                    visited.add((r,c))
                    queue.append([r,c,time+1])
                    fresh -= 1
        if fresh > 0:
            return -1
        return time
