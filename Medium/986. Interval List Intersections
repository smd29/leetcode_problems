class Solution:
    def intervalIntersection(self, firstList: List[List[int]], secondList: List[List[int]]) -> List[List[int]]:
        m, n = len(firstList), len(secondList)
        idx1, idx2 = 0, 0 
        res = []
        while idx1 < m and idx2 < n:
            A, B = firstList[idx1], secondList[idx2]
            if A[0] <= B[0] <= A[1]:
                start = max(A[0],B[0])
                end = min(A[1],B[1])
                res.append([start,end])
            elif B[0] <= A[0] <= B[1]:
                start = max(A[0],B[0])
                end = min(A[1],B[1])
                res.append([start,end])
            if A[1] < B[1]:
                    idx1 += 1
            elif A[1] > B[1]:
                    idx2 += 1
            elif A[1] == B[1]:
                idx1 += 1
                idx2 += 1
            elif A[1] < B[0]:
                idx1 += 1
            elif B[1] < A[0]:
                idx2 += 1
        return res
