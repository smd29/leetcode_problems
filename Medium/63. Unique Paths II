class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        m = len(obstacleGrid)
        n = len(obstacleGrid[0])
        # m--> rows, n--> cols
        dp = [[0 for j in range(n)]for i in range(m)]
        dp[0][0] = 1
        for i in range(0,m):
            for j in range(0,n):
                if obstacleGrid[i][j] == 1:
                    dp[i][j] = 0
                    continue
                if i > 0 and j > 0:
                    dp[i][j] = dp[i][j-1]+dp[i-1][j]
                elif i > 0:
                    dp[i][j] = dp[i-1][j]
                elif j > 0:
                    dp[i][j] = dp[i][j-1]
        return dp[m-1][n-1]
