class Solution:
    def minFallingPathSum(self, matrix: List[List[int]]) -> int:
        n = len(matrix)
        dp = [[0 for c in range(n)]for r in range(n)]
        #initialize the first row
        for c in range(n):
            dp[0][c] = matrix[0][c]
        
        for r in range(1,n):
            for c in range(n):
                if c == 0:
                    dp[r][c] = matrix[r][c] + min(dp[r-1][c],dp[r-1][c+1])
                elif c == n - 1:
                    dp[r][c] = matrix[r][c] + min(dp[r-1][c-1],dp[r-1][c])
                else:
                    dp[r][c] = matrix[r][c] + min(dp[r-1][c-1],dp[r-1][c],dp[r-1][c+1])
        return min(dp[-1])
