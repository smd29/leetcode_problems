# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        self.ans = None
        
        def helper(node):
            if not node:
                return 
            left = helper(node.left)
            right = helper(node.right)
            curr = node==p or node==q
            if (curr and left) or (curr and right) or (left and right):
                self.ans = node
                return self.ans
            return left or right or curr
        
        helper(root)
        return self.ans
