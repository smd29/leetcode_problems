# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def deepestLeavesSum(self, root: Optional[TreeNode]) -> int:
        #do a level order traversal and find the sum of last level 
        #bfs
        queue = collections.deque()
        queue.append(root)
        
        while queue:
            curr_level_sum = 0
            for idx in range(len(queue)):
                node = queue.popleft() 
                if node:
                    curr_level_sum += node.val
                    queue.append(node.left)
                    queue.append(node.right)
            if curr_level_sum > 0:
                ans = curr_level_sum
        return ans
