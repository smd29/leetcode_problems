class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        res = []
        candidates.sort()
        
        def backtrack(nums,target,idx,subset,res):
            if target < 0 :
                return 
            if target == 0:
                res.append(subset)
                return 
            for i in range(idx,len(nums)):
                if i > idx and nums[i] == nums[i-1]:
                    continue
                backtrack(nums,target-nums[i],i+1,subset+[nums[i]],res)
                
        backtrack(candidates,target,0,[],res)
        return res
