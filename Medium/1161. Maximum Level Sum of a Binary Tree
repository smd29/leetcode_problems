# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxLevelSum(self, root: Optional[TreeNode]) -> int:
        queue = collections.deque()
        queue.append(root)
        level = 1
        max_sum = root.val
        max_level = 1
        
        while queue:
            curr_sum = 0
            last_level = True
            for _ in range(len(queue)):
                node = queue.popleft()
                if node:
                    last_level = False
                    curr_sum += node.val
                    queue.append(node.left)
                    queue.append(node.right)
            if not last_level:
                if curr_sum > max_sum:
                    max_sum = curr_sum
                    max_level = level
            level += 1
        return max_level
