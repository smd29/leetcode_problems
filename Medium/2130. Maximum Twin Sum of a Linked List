# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def pairSum(self, head: Optional[ListNode]) -> int:
        def reverseLL(head):
            prevNode = nextNode = None
            curr = head
            while curr:
                nextNode = curr.next 
                curr.next = prevNode
                prevNode = curr
                curr = nextNode
        
            rev_ll = prevNode
            return rev_ll
        
        def cloneLL(head):
            if head is None:
                return None
            newNode = ListNode(head.val)
            newNode.next = cloneLL(head.next)
            return newNode
        
        ll = cloneLL(head)
        rev_ll = reverseLL(head)
        max_sum = 0
        while ll:
            max_sum = max(max_sum,ll.val+rev_ll.val)
            ll = ll.next
            rev_ll = rev_ll.next 
        return max_sum
