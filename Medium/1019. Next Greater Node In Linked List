# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def nextLargerNodes(self, head: Optional[ListNode]) -> List[int]:
        arr = []
        dummy = head
        while dummy:
            arr.append(dummy.val)
            dummy = dummy.next
        
        stack = []
        res = [0] * len(arr)
        #we'll push an element in the stack only when it is smaller or equal to top 
        #we'll store indices in stack
        for idx,val in enumerate(arr):
            if stack and arr[stack[-1]] < val:
                while stack and arr[stack[-1]] < val:
                    res[stack[-1]] = val
                    stack.pop()
            stack.append(idx)
        return res
            
    #TC -> O(N) || SC -> O(n)
