class Solution:
    def canPlace(self,m,n,position,sep):
        count = 1
        location = position[0]
        for i in range(1,n):
            current_loc = position[i]
            if current_loc - location >= sep:
                count += 1
                location = current_loc

                if count == m:
                    return True

        return False
    
    def maxDistance(self, position: List[int], m: int) -> int:
        n = len(position)
        position.sort()
        low = 0
        #high will be difference of the sorted array
        high = position[-1]-position[0]
        ans = -1
        while low <= high:
            mid = (low+high)//2
            place = self.canPlace(m,n,position,mid)
            if place:
                ans = mid
                low = mid+1
            else:
                high = mid-1
        return ans
