class SparseVector:
    def __init__(self, nums: List[int]):
        self.nonZero = {}
        for idx, val in enumerate(nums):
            if val != 0:
                self.nonZero[idx] = val

    # Return the dotProduct of two sparse vectors
    def dotProduct(self, vec: 'SparseVector') -> int:
        ans = 0 
        for idx, val in self.nonZero.items():
            if idx in vec.nonZero:
                ans += val * vec.nonZero[idx]
        return ans

# Your SparseVector object will be instantiated and called as such:
# v1 = SparseVector(nums1)
# v2 = SparseVector(nums2)
# ans = v1.dotProduct(v2)
