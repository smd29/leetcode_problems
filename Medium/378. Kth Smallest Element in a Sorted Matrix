class Solution:
    def kthSmallest(self, matrix: List[List[int]], k: int) -> int:
        rows, cols = len(matrix), len(matrix[0])
        total = rows * cols
        low, high = float('inf'), float('-inf')
        for r in range(rows):
            low = min(matrix[r][0],low)
        for c in range(cols):
            high = max(matrix[c][-1],high)
        
        while low <= high:
            mid = (low+high) // 2
            cnt = 0
            for r in range(rows):
                cnt += self.lesserEqual(matrix[r],mid)         
            if cnt <= k-1:
                low = mid + 1
            else:
                high = mid - 1
        return low
                
    def lesserEqual(self,arr,target):
        low, high = 0, len(arr) - 1
        while low <= high:
            mid = (low+high) // 2
            if arr[mid] <= target:
                low = mid + 1
            else:
                high = mid - 1
        return low
