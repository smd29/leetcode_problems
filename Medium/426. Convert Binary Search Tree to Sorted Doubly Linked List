"""
# Definition for a Node.
class Node:
    def __init__(self, val, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
"""

class Solution:
    def treeToDoublyList(self, root: 'Optional[Node]') -> 'Optional[Node]':
        def dfs(node):
            nonlocal last,first
            if node:
                dfs(node.left)
                if last:
                    last.right = node 
                    node.left = last 
                else:
                    first = node
                last = node 
                dfs(node.right)
        
        if not root:
            return None 
        
        first, last = None, None 
        dfs(root)
        last.right, first.left = first, last
        return first
