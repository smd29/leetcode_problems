class Solution:
    def maximalSquare(self, matrix: List[List[str]]) -> int:
        rows, cols = len(matrix), len(matrix[0])
        dp = {} #key:value, considering (r,c) as the top left cell, what can be the maximum square length
        
        def fill_dp(r,c):
            #base case. boundary cell
            if r >= rows or c >= cols:
                return 0 
            
            if (r,c) not in dp:
                down = fill_dp(r+1,c)
                right = fill_dp(r,c+1)
                diagonal = fill_dp(r+1,c+1)
                
                dp[(r,c)] = 0
                if matrix[r][c] == "1":
                    dp[(r,c)] = 1 + min(down,right,diagonal)
                
            return dp[(r,c)]
            
        fill_dp(0,0)
        sq_len = max(dp.values())
        return sq_len ** 2
