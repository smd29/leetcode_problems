class Solution:
    def combinationSum3(self, k: int, n: int) -> List[List[int]]:
        res = []
        def backtrack(remaining,subset,next_start):
            if remaining == 0 and len(subset) == k:
                res.append(list(subset))
                return 
            elif remaining < 0 or len(subset) == k:
                return 
            for i in range(next_start, 9):
                subset.append(i+1)
                backtrack(remaining-i-1, subset, i+1)
                subset.pop()
        backtrack(n,[],0)
        return res
