class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        res = []
        def backtrack(idx):
            if idx == len(nums):
                subset = []
                for i in range(0,len(nums)):
                    subset.append(nums[i])
                res.append(subset)
                return
                
            for i in range(idx,len(nums)):
                nums[i],nums[idx] = nums[idx],nums[i]
                backtrack(idx+1)
                nums[i],nums[idx] = nums[idx],nums[i]
                
        backtrack(0)
        return res
