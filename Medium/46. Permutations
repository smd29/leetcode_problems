class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
                
        if len(nums) == 1:
            return [[nums[0]]]
        
        def backtracking(nums, path):
            
            if not nums:
                result.append(path)
            
            for i in range(0, len(nums)):
                
                backtracking(nums[:i] + nums[i+1:], path+[nums[i]] ) 
        
        result = []
        
        backtracking(nums, path = [])
        
        return result
