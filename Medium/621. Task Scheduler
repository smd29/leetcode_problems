from collections import Counter

class Solution:
    def leastInterval(self, tasks: List[str], n: int) -> int:
        freq = dict(Counter(tasks))
        max_freq = 0
        for val in freq:
            #heappush(heap,(-freq[val],val))
            if freq[val] > max_freq:
                max_freq = freq[val]
        #if the max frequency is k, then there will be at least k-1 gaps with n+1 time each
        min_len = (max_freq-1) * (1+n)
        
        #count how many MORE are of same frequency
        count = 0
        for val in freq:
            if freq[val] == max_freq:
                count += 1
        min_len += count
        return max(min_len,len(tasks))
