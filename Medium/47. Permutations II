class Solution:
    def permuteUnique(self, nums: List[int]) -> List[List[int]]:
        res = set()
        n = len(nums)
        def backtrack(idx):
            if idx == n:
                subset = []
                for i in range(n):
                    subset.append(nums[i])
                res.add(tuple(subset))
                
            for i in range(idx,n):
                nums[i],nums[idx] = nums[idx],nums[i]
                backtrack(idx+1)
                nums[i],nums[idx] = nums[idx],nums[i]
        
        backtrack(0)
        return list(res)
