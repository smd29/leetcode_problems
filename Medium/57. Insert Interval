class Solution:
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        if len(intervals) == 0:
            return [newInterval]
        #before interval, no overlap
        if newInterval[1] < intervals[0][0]:
            return [newInterval] + intervals
        #after interval, no overlap
        if newInterval[0] > intervals[-1][1]:
            return intervals + [newInterval] 
        
        #find the correct position to insert
        intervals2 = []
        isInserted = False
        for val in intervals:
            if not isInserted and newInterval[0] <= val[0]:
                intervals2.append(newInterval)
                isInserted = True
            intervals2.append(val)
        if not isInserted:
            intervals2.append(newInterval)
        
        #merge the intervals
        res = [intervals2[0]]
        for idx in range(1,len(intervals2)):
            if intervals2[idx][0] <= res[-1][1]:
                res[-1][1] = max(res[-1][1],intervals2[idx][1])
            else:
                res.append(intervals2[idx])
        return res
    
#TC -> O(n) || SC -> O(n)
